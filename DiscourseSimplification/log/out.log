DiscourseSimplifier initialized


{
    "attribution_verbs" : [
        "comment",
        "have faith in",
        "consider",
        "demand",
        "apprise",
        "report",
        "evince",
        "identify",
        "enlighten",
        "utter",
        "ruminate",
        "give away",
        "discern",
        "hold",
        "acknowledge",
        "explain",
        "hypothesize",
        "forbid",
        "shout",
        "theorise",
        "betray",
        "turn down",
        "traverse",
        "pipe up",
        "cogitate",
        "confide",
        "hope",
        "dispute",
        "notify",
        "conjecture",
        "televise",
        "signify",
        "read",
        "propose",
        "void",
        "express",
        "perceive",
        "mention",
        "meditate",
        "insist",
        "presume",
        "judge",
        "compute",
        "speculate",
        "discuss",
        "counter",
        "reveal",
        "contradict",
        "conceive",
        "proclaim",
        "hypothesise",
        "ascertain",
        "signal",
        "mean",
        "respond",
        "prohibit",
        "signify",
        "weight",
        "urge",
        "repudiate",
        "pronounce",
        "deduce",
        "asseverate",
        "design",
        "expect",
        "critique",
        "adjudge",
        "enounce",
        "wonder",
        "educate",
        "detect",
        "deliberate",
        "confess",
        "rehearse",
        "publish",
        "verbalize",
        "veto",
        "state",
        "suspect",
        "disprove",
        "blur",
        "manifest",
        "disclose",
        "reiterate",
        "avow",
        "slur",
        "disagree",
        "communicate",
        "enunciate",
        "disallow",
        "disclaim",
        "contemplate",
        "reason",
        "brood",
        "imagine",
        "distinguish",
        "estimate",
        "narrate",
        "surmise",
        "remark",
        "theorize",
        "clarify",
        "study",
        "disavow",
        "keep back",
        "recollect",
        "display",
        "admit",
        "credit",
        "belie",
        "entertain",
        "verbalise",
        "dismiss",
        "argue",
        "think",
        "recite",
        "invalidate",
        "abjure",
        "speak up",
        "feel",
        "relate",
        "renounce",
        "articulate",
        "assess",
        "instruct",
        "guess",
        "esteem",
        "trust",
        "teach",
        "speak",
        "ventilate",
        "guess",
        "edify",
        "acquaint",
        "connote",
        "vocalize",
        "question",
        "mediate",
        "submit",
        "mark",
        "indicate",
        "iterate",
        "whisper",
        "familiarize",
        "tell",
        "garble",
        "offer",
        "share",
        "expose",
        "regard",
        "refuse",
        "muse",
        "clue",
        "assert",
        "observe",
        "differentiate",
        "argue against",
        "recount",
        "believe",
        "count",
        "reflect on",
        "affirm",
        "recall",
        "anticipate",
        "spill",
        "controvert",
        "air",
        "warn",
        "record",
        "suppose",
        "espouse",
        "voice",
        "declare",
        "announce",
        "exhibit",
        "claim",
        "gather",
        "recognize",
        "describe",
        "influence",
        "predicate",
        "denote",
        "say",
        "deem",
        "embrace",
        "contest",
        "sense",
        "phrase",
        "allege",
        "publicise",
        "surmise",
        "ponder",
        "discriminate",
        "refute",
        "agree",
        "divulge",
        "couch",
        "note",
        "discredit",
        "reject",
        "answer",
        "oppose",
        "advise",
        "infer",
        "bear in mind",
        "repeat",
        "intend",
        "allow",
        "mispronounce",
        "reckon",
        "familiarise",
        "vocalise",
        "make known",
        "reflect",
        "concede",
        "purpose",
        "recognise",
        "recount",
        "disown",
        "broadcast",
        "deny",
        "let slip",
        "renounce",
        "remember",
        "rationalize",
        "assume",
        "bid",
        "register",
        "make out",
        "withhold",
        "inform",
        "command",
        "unburden",
        "publicize",
        "recant",
        "order",
        "talk",
        "know",
        "promote",
        "advertise",
        "swear",
        "emphasize",
        "underline",
        "testify",
        "cite",
        "message",
        "ask"
    ],
    "cue_phrases" : {
        "adverbial_phrases" : {
            "matching" : "exact",
            "phrases" : {
                "after" : "TEMPORAL_AFTER_C",
                "after(\\W(.*?\\W)?)(this|that)" : "TEMPORAL_AFTER_C",
                "although" : "CONTRAST",
                "and" : "LIST",
                "and after" : "TEMPORAL_AFTER_C",
                "and after(\\W(.*?\\W)?)(this|that)" : "TEMPORAL_AFTER_C",
                "as" : "BACKGROUND",
                "as a result" : "RESULT_C",
                "as a result of" : "RESULT_C",
                "as a result of(\\W(.*?\\W)?)(this|that)" : "RESULT_C",
                "as a result(\\W(.*?\\W)?)(this|that)" : "RESULT_C",
                "because" : "CAUSE_C",
                "because(\\W(.*?\\W)?)(this|that)" : "CAUSE_C",
                "before" : "TEMPORAL_BEFORE_C",
                "before(\\W(.*?\\W)?)(this|that)" : "TEMPORAL_BEFORE_C",
                "but" : "CONTRAST",
                "but now" : "CONTRAST",
                "despite" : "CONTRAST",
                "even before" : "ELABORATION",
                "even though" : "CONTRAST",
                "even when" : "CONTRAST",
                "except when" : "CONTRAST",
                "for example" : "ELABORATION",
                "further" : "ELABORATION",
                "however" : "CONTRAST",
                "if" : "CONDITION",
                "in addition" : "LIST",
                "in addition to" : "LIST",
                "in case" : "CONDITION",
                "instead" : "CONTRAST",
                "more provocatively" : "ELABORATION",
                "moreover" : "LIST",
                "next" : "TEMPORAL_AFTER_C",
                "now" : "BACKGROUND",
                "once" : "BACKGROUND",
                "or" : "DISJUNCTION",
                "previously" : "TEMPORAL_BEFORE_C",
                "previously(\\W(.*?\\W)?)(this|that)" : "TEMPORAL_BEFORE_C",
                "rather" : "CONTRAST",
                "recently" : "ELABORATION",
                "since" : "CAUSE_C",
                "since(\\W(.*?\\W)?)now" : "ELABORATION",
                "so" : "ELABORATION",
                "so far" : "ELABORATION",
                "still" : "CONTRAST",
                "then" : "TEMPORAL_AFTER_C",
                "though" : "CONTRAST",
                "thus" : "CONTRAST",
                "unless" : "CONDITION",
                "until" : "CONDITION",
                "until recently" : "CONTRAST",
                "when" : "BACKGROUND",
                "where" : "ELABORATION",
                "whereby" : "ELABORATION",
                "whether" : "ELABORATION",
                "while" : "CONTRAST",
                "with" : "BACKGROUND",
                "without" : "BACKGROUND",
                "yet" : "CONTRAST"
            }
        },
        "coordinating_phrases" : {
            "matching" : "contained",
            "phrases" : {
                "after" : "TEMPORAL_AFTER_C",
                "although" : "CONTRAST",
                "and" : "LIST",
                "and after" : "TEMPORAL_AFTER_C",
                "as" : "BACKGROUND",
                "as a result" : "RESULT_C",
                "as a result of" : "RESULT_C",
                "because" : "CAUSE_C",
                "before" : "TEMPORAL_BEFORE_C",
                "but" : "CONTRAST",
                "but now" : "CONTRAST",
                "despite" : "CONTRAST",
                "even before" : "ELABORATION",
                "even though" : "CONTRAST",
                "even when" : "CONTRAST",
                "except when" : "CONTRAST",
                "for example" : "ELABORATION",
                "further" : "ELABORATION",
                "however" : "CONTRAST",
                "if" : "CONDITION",
                "in addition" : "LIST",
                "in addition to" : "LIST",
                "in case" : "CONDITION",
                "instead" : "CONTRAST",
                "more provocatively" : "ELABORATION",
                "moreover" : "LIST",
                "next" : "TEMPORAL_AFTER_C",
                "now" : "BACKGROUND",
                "once" : "BACKGROUND",
                "or" : "DISJUNCTION",
                "previously" : "TEMPORAL_BEFORE_C",
                "rather" : "CONTRAST",
                "recently" : "ELABORATION",
                "since" : "CAUSE_C",
                "since(\\W(.*?\\W)?)now" : "ELABORATION",
                "so" : "ELABORATION",
                "so far" : "ELABORATION",
                "still" : "CONTRAST",
                "then" : "TEMPORAL_AFTER_C",
                "though" : "CONTRAST",
                "thus" : "CONTRAST",
                "unless" : "CONDITION",
                "until" : "CONDITION",
                "until recently" : "CONTRAST",
                "when" : "BACKGROUND",
                "where" : "ELABORATION",
                "whereby" : "ELABORATION",
                "whether" : "ELABORATION",
                "while" : "CONTRAST",
                "with" : "BACKGROUND",
                "without" : "BACKGROUND",
                "yet" : "CONTRAST"
            }
        },
        "default_phrases" : {
            "matching" : "contained",
            "phrases" : {
                "after" : "TEMPORAL_AFTER_C",
                "although" : "CONTRAST",
                "and" : "LIST",
                "and after" : "TEMPORAL_AFTER_C",
                "as" : "BACKGROUND",
                "as a result" : "RESULT_C",
                "as a result of" : "RESULT_C",
                "because" : "CAUSE_C",
                "before" : "TEMPORAL_BEFORE_C",
                "but" : "CONTRAST",
                "but now" : "CONTRAST",
                "despite" : "CONTRAST",
                "even before" : "ELABORATION",
                "even though" : "CONTRAST",
                "even when" : "CONTRAST",
                "except when" : "CONTRAST",
                "for example" : "ELABORATION",
                "further" : "ELABORATION",
                "however" : "CONTRAST",
                "if" : "CONDITION",
                "in addition" : "LIST",
                "in addition to" : "LIST",
                "in case" : "CONDITION",
                "instead" : "CONTRAST",
                "more provocatively" : "ELABORATION",
                "moreover" : "LIST",
                "next" : "TEMPORAL_AFTER_C",
                "now" : "BACKGROUND",
                "once" : "BACKGROUND",
                "or" : "DISJUNCTION",
                "previously" : "TEMPORAL_BEFORE_C",
                "rather" : "CONTRAST",
                "recently" : "ELABORATION",
                "since" : "CAUSE_C",
                "since(\\W(.*?\\W)?)now" : "ELABORATION",
                "so" : "ELABORATION",
                "so far" : "ELABORATION",
                "still" : "CONTRAST",
                "then" : "TEMPORAL_AFTER_C",
                "though" : "CONTRAST",
                "thus" : "CONTRAST",
                "unless" : "CONDITION",
                "until" : "CONDITION",
                "until recently" : "CONTRAST",
                "when" : "BACKGROUND",
                "where" : "ELABORATION",
                "whereby" : "ELABORATION",
                "whether" : "ELABORATION",
                "while" : "CONTRAST",
                "with" : "BACKGROUND",
                "without" : "BACKGROUND",
                "yet" : "CONTRAST"
            }
        },
        "subordinating_phrases" : {
            "matching" : "contained",
            "phrases" : {
                "after" : "TEMPORAL_BEFORE",
                "although" : "CONTRAST",
                "and" : "LIST",
                "and after" : "TEMPORAL_BEFORE",
                "as" : "BACKGROUND",
                "as a result" : "RESULT",
                "as a result of" : "RESULT",
                "because" : "CAUSE",
                "before" : "TEMPORAL_AFTER",
                "but" : "CONTRAST",
                "but now" : "CONTRAST",
                "despite" : "CONTRAST",
                "even before" : "ELABORATION",
                "even though" : "CONTRAST",
                "even when" : "CONTRAST",
                "except when" : "CONTRAST",
                "for example" : "ELABORATION",
                "further" : "ELABORATION",
                "however" : "CONTRAST",
                "if" : "CONDITION",
                "in addition" : "LIST",
                "in addition to" : "LIST",
                "in case" : "CONDITION",
                "instead" : "CONTRAST",
                "more provocatively" : "ELABORATION",
                "moreover" : "LIST",
                "next" : "TEMPORAL_AFTER",
                "now" : "BACKGROUND",
                "once" : "BACKGROUND",
                "or" : "DISJUNCTION",
                "previously" : "TEMPORAL_AFTER",
                "rather" : "CONTRAST",
                "recently" : "ELABORATION",
                "since" : "CAUSE",
                "since(\\W(.*?\\W)?)now" : "ELABORATION",
                "so" : "ELABORATION",
                "so far" : "ELABORATION",
                "still" : "CONTRAST",
                "then" : "TEMPORAL_AFTER",
                "though" : "CONTRAST",
                "thus" : "CONTRAST",
                "unless" : "CONDITION",
                "until" : "CONDITION",
                "until recently" : "CONTRAST",
                "when" : "BACKGROUND",
                "where" : "ELABORATION",
                "whereby" : "ELABORATION",
                "whether" : "ELABORATION",
                "while" : "CONTRAST",
                "with" : "BACKGROUND",
                "without" : "BACKGROUND",
                "yet" : "CONTRAST"
            }
        }
    },
    "ignored-relations" : [
        "UNKNOWN_COORDINATION"
    ],
    "remove-brackets" : false,
    "rules" : [
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.ReferenceInitialConjunctionExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.ReferenceInitialAdverbialExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.ReferenceMedialAdverbialExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.ReferenceFinalAdverbialExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.CoordinationExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.NonRestrictiveRelativeClauseWhomExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.NonRestrictiveRelativeClauseWhoWhichExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.NonRestrictiveRelativeClauseWhereExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.NonRestrictiveRelativeClausePrepWhichWhoExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.NonRestrictiveRelativeClauseWhoseExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.RestrictiveAppositionExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.NonRestrictiveAppositionExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.PurposePreExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SubordinationPrePurposeExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SharedNPPreParticipalExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SubordinationPreExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SharedNPPostCoordinationExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SharedNPPostParticipalExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SubordinationPostPurposeExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.PurposePostExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.QuotedAttributionPostExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SubordinationPostAttributionExtractor2",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SubordinationPostAttributionExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.SubordinationPostExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.QuotedAttributionPreExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.PreAttributionExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.ParticipialMiddleExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.RestrictiveRelativeClauseWhoWhichExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.RestrictiveRelativeClauseWhoseExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.RestrictiveRelativeClauseWithoutRelativePronounExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.RestrictiveRelativeClauseWhomExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.PrepositionalAttachedtoVPExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.RestrictiveParticipialExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.AdjectivalAdverbialMiddleFinalExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.AdjectivalAdverbialInitialExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.LeadNPExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.PrepositionalInitialExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.PrepositionalMiddleFinalExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.ListNP.PreListNPExtractor",
        "org.lambda3.text.simplification.discourse.runner.discourse_tree.extraction.rules.ListNP.PostListNPExtractor"
    ]
}


# Processing sentence 1/20 #

Loading parser from serialized file edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz ... done [0.5 sec].

Loading classifier from edu/stanford/nlp/models/ner/english.all.3class.distsim.crf.ser.gz ... done [1.1 sec].

Loading POS tagger from edu/stanford/nlp/models/pos-tagger/english-left3words/english-left3words-distsim.tagger ... done [0.8 sec].

Loading POS tagger from edu/stanford/nlp/models/pos-tagger/english-left3words/english-left3words-distsim.tagger ... done [0.5 sec].

# Processing sentence 2/20 #

# Processing sentence 3/20 #

# Processing sentence 4/20 #

# Processing sentence 5/20 #

# Processing sentence 6/20 #

# Processing sentence 7/20 #

# Processing sentence 8/20 #

# Processing sentence 9/20 #

# Processing sentence 10/20 #

# Processing sentence 11/20 #

# Processing sentence 12/20 #

# Processing sentence 13/20 #

# Processing sentence 14/20 #

# Processing sentence 15/20 #

# Processing sentence 16/20 #

# Processing sentence 17/20 #

# Processing sentence 18/20 #

# Processing sentence 19/20 #

# Processing sentence 20/20 #

### FINISHED

done

